// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoef;

#nullable disable

namespace proyectoef.Migrations
{
    [DbContext(typeof(TareasContext))]
    [Migration("20241025201210_DatosDelReto")]
    partial class DatosDelReto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("proyectoef.Models.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Peso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b578"),
                            Nombre = "Actividades Pendientes",
                            Peso = 20
                        },
                        new
                        {
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b579"),
                            Nombre = "Actividades Personales",
                            Peso = 50
                        },
                        new
                        {
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b580"),
                            Nombre = "Actividades Laborales",
                            Peso = 30
                        },
                        new
                        {
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b581"),
                            Nombre = "Actividades de Estudio",
                            Peso = 40
                        });
                });

            modelBuilder.Entity("proyectoef.Models.Tarea", b =>
                {
                    b.Property<Guid>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("PrioridadTarea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TareaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Tarea", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = new Guid("3843931d-0caa-4c85-b866-cf943b645bab"),
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b578"),
                            FechaCreacion = new DateTime(2024, 10, 25, 15, 12, 10, 318, DateTimeKind.Local).AddTicks(3320),
                            PrioridadTarea = "Media",
                            Titulo = "Pago de servicios públicos"
                        },
                        new
                        {
                            TareaId = new Guid("3843931d-0caa-4c85-b866-cf943b645bac"),
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b579"),
                            FechaCreacion = new DateTime(2024, 10, 25, 15, 12, 10, 319, DateTimeKind.Local).AddTicks(7054),
                            PrioridadTarea = "Baja",
                            Titulo = "Terminar de ver película en Apple TV+"
                        },
                        new
                        {
                            TareaId = new Guid("3843931d-0caa-4c85-b866-cf943b645bad"),
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b580"),
                            FechaCreacion = new DateTime(2024, 10, 25, 15, 12, 10, 319, DateTimeKind.Local).AddTicks(7063),
                            PrioridadTarea = "Alta",
                            Titulo = "Revisar correos electrónicos"
                        },
                        new
                        {
                            TareaId = new Guid("3843931d-0caa-4c85-b866-cf943b645bae"),
                            CategoriaId = new Guid("28b26fa3-8035-469b-8d6f-603a6130b581"),
                            FechaCreacion = new DateTime(2024, 10, 25, 15, 12, 10, 319, DateTimeKind.Local).AddTicks(7066),
                            PrioridadTarea = "Media",
                            Titulo = "Estudiar para el examen de matemáticas"
                        });
                });

            modelBuilder.Entity("proyectoef.Models.Tarea", b =>
                {
                    b.HasOne("proyectoef.Models.Categoria", "Categoria")
                        .WithMany("Tareas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("proyectoef.Models.Categoria", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
